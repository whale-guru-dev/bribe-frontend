/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveMIMBidHelperV1,
  AaveMIMBidHelperV1Interface,
} from "../AaveMIMBidHelperV1";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "_usdcToken",
        type: "address",
      },
      {
        internalType: "contract IAavePool",
        name: "_aaveBribePool",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "contract IERC20",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "proposalId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "support",
        type: "bool",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amountInBidAsset",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "usdcPlacedInBid",
        type: "uint256",
      },
    ],
    name: "BidWithOtherAsset",
    type: "event",
  },
  {
    inputs: [],
    name: "aaveBribePool",
    outputs: [
      {
        internalType: "contract IAavePool",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minUSDCToReceive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "contract ICurvePool",
                name: "curvePool",
                type: "address",
              },
              {
                internalType: "int128",
                name: "xTokenIndex",
                type: "int128",
              },
              {
                internalType: "int128",
                name: "yTokenIndex",
                type: "int128",
              },
            ],
            internalType: "struct AaveMIMBidHelperV1.CurvePoolConfig",
            name: "curvePoolConfig",
            type: "tuple",
          },
        ],
        internalType: "struct AaveMIMBidHelperV1.Bid",
        name: "bid",
        type: "tuple",
      },
    ],
    name: "curveSwapAssetBid",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "token",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "minUSDCToReceive",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "proposalId",
            type: "uint256",
          },
          {
            internalType: "bool",
            name: "support",
            type: "bool",
          },
          {
            components: [
              {
                internalType: "contract ICurvePool",
                name: "curvePool",
                type: "address",
              },
              {
                internalType: "int128",
                name: "xTokenIndex",
                type: "int128",
              },
              {
                internalType: "int128",
                name: "yTokenIndex",
                type: "int128",
              },
            ],
            internalType: "struct AaveMIMBidHelperV1.CurvePoolConfig",
            name: "curvePoolConfig",
            type: "tuple",
          },
        ],
        internalType: "struct AaveMIMBidHelperV1.Bid",
        name: "bid",
        type: "tuple",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "deadline",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "v",
        type: "uint8",
      },
      {
        internalType: "bytes32",
        name: "r",
        type: "bytes32",
      },
      {
        internalType: "bytes32",
        name: "s",
        type: "bytes32",
      },
    ],
    name: "curveSwapAssetBidWithPermit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "usdcToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051610c8d380380610c8d83398101604081905261002f9161004d565b6001600160601b0319606092831b8116608052911b1660a05261009e565b6000806040838503121561005f578182fd5b825161006a81610086565b602084015190925061007b81610086565b809150509250929050565b6001600160a01b038116811461009b57600080fd5b50565b60805160601c60a05160601c610bb16100dc60003960008181609a015281816103f901526104e1015260008181605601526104280152610bb16000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806311eac855146100515780632b76079b146100955780638fe2a494146100bc578063f6a31539146100dd575b600080fd5b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020015b60405180910390f35b6100787f000000000000000000000000000000000000000000000000000000000000000081565b6100cf6100ca366004610a19565b6100f0565b60405190815260200161008c565b6100cf6100eb366004610a35565b610130565b600061012a61010260208401846109dc565b60208401356040850135606086013561012160a08801608089016109a4565b8760a001610213565b92915050565b600061013f60208a018a6109dc565b60405163d505accf60e01b81526001600160a01b038a811660048301528981166024830152604482018990526064820188905260ff8716608483015260a4820186905260c48201859052919091169063d505accf9060e401600060405180830381600087803b1580156101b157600080fd5b505af11580156101c5573d6000803e3d6000fd5b5061020692506101db91505060208b018b6109dc565b8a602001358b604001358c606001358d60800160208101906101fd91906109a4565b8e60a001610213565b9998505050505050505050565b6000846102765760405162461bcd60e51b815260206004820152602660248201527f4d696e205553445420746f20726563656976652073686f756c64206265206e6f6044820152656e207a65726f60d01b60648201526084015b60405180910390fd5b61028b6001600160a01b0388163330896105a6565b6102ac61029b60208401846109dc565b6001600160a01b0389169088610617565b60006102bb60208401846109dc565b6001600160a01b031663a6417ed66102d960408601602087016109f8565b6102e960608701604088016109f8565b6040516001600160e01b031960e085901b168152600f92830b6004820152910b6024820152604481018a905260648101899052608401602060405180830381600087803b15801561033957600080fd5b505af115801561034d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103719190610ac2565b9050858110156103e25760405162461bcd60e51b815260206004820152603660248201527f616d6f756e742072656365697665642073686f756c64206265206d6f726520746044820152751a185b881b5a5b881d5cd918c81c995c5d595cdd195960521b606482015260840161026d565b60405163095ea7b360e01b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000081166004830152602482018390527f0000000000000000000000000000000000000000000000000000000000000000169063095ea7b390604401602060405180830381600087803b15801561046c57600080fd5b505af1158015610480573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104a491906109c0565b506040516325a7193360e11b8152336004820152602481018690526fffffffffffffffffffffffffffffffff8216604482015284151560648201527f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031690634b4e326690608401600060405180830381600087803b15801561052d57600080fd5b505af1158015610541573d6000803e3d6000fd5b50506040805188815287151560208201529081018a9052606081018490523392506001600160a01b038b1691507ff902f3c9b07d46bbeca228762c7ddb0cafc103ea86555dcad866ceb3635612139060800160405180910390a3979650505050505050565b6040516001600160a01b03808516602483015283166044820152606481018290526106119085906323b872dd60e01b906084015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610740565b50505050565b8015806106a05750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b15801561066657600080fd5b505afa15801561067a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069e9190610ac2565b155b61070b5760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b606482015260840161026d565b6040516001600160a01b03831660248201526044810182905261073b90849063095ea7b360e01b906064016105da565b505050565b6000610795826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166108129092919063ffffffff16565b80519091501561073b57808060200190518101906107b391906109c0565b61073b5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161026d565b6060610821848460008561082b565b90505b9392505050565b60608247101561088c5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161026d565b843b6108da5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161026d565b600080866001600160a01b031685876040516108f69190610ada565b60006040518083038185875af1925050503d8060008114610933576040519150601f19603f3d011682016040523d82523d6000602084013e610938565b606091505b5091509150610948828286610953565b979650505050505050565b60608315610962575081610824565b8251156109725782518084602001fd5b8160405162461bcd60e51b815260040161026d9190610af6565b6000610100828403121561099e578081fd5b50919050565b6000602082840312156109b5578081fd5b813561082481610b6d565b6000602082840312156109d1578081fd5b815161082481610b6d565b6000602082840312156109ed578081fd5b813561082481610b55565b600060208284031215610a09578081fd5b813580600f0b8114610824578182fd5b60006101008284031215610a2b578081fd5b610824838361098c565b6000806000806000806000806101e0898b031215610a51578384fd5b610a5b8a8a61098c565b9750610100890135610a6c81610b55565b9650610120890135610a7d81610b55565b95506101408901359450610160890135935061018089013560ff81168114610aa3578384fd5b979a96995094979396929592945050506101a0820135916101c0013590565b600060208284031215610ad3578081fd5b5051919050565b60008251610aec818460208701610b29565b9190910192915050565b6020815260008251806020840152610b15816040850160208701610b29565b601f01601f19169190910160400192915050565b60005b83811015610b44578181015183820152602001610b2c565b838111156106115750506000910152565b6001600160a01b0381168114610b6a57600080fd5b50565b8015158114610b6a57600080fdfea264697066735822122077d5cf72c623bb5156f4e908d132e9e3ee5087ab79af1a729a2bde3462d4f8ac64736f6c63430008040033";

type AaveMIMBidHelperV1ConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveMIMBidHelperV1ConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveMIMBidHelperV1__factory extends ContractFactory {
  constructor(...args: AaveMIMBidHelperV1ConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    _usdcToken: string,
    _aaveBribePool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveMIMBidHelperV1> {
    return super.deploy(
      _usdcToken,
      _aaveBribePool,
      overrides || {}
    ) as Promise<AaveMIMBidHelperV1>;
  }
  getDeployTransaction(
    _usdcToken: string,
    _aaveBribePool: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _usdcToken,
      _aaveBribePool,
      overrides || {}
    );
  }
  attach(address: string): AaveMIMBidHelperV1 {
    return super.attach(address) as AaveMIMBidHelperV1;
  }
  connect(signer: Signer): AaveMIMBidHelperV1__factory {
    return super.connect(signer) as AaveMIMBidHelperV1__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveMIMBidHelperV1Interface {
    return new utils.Interface(_abi) as AaveMIMBidHelperV1Interface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveMIMBidHelperV1 {
    return new Contract(address, _abi, signerOrProvider) as AaveMIMBidHelperV1;
  }
}
