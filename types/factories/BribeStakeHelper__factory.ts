/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  BribeStakeHelper,
  BribeStakeHelperInterface,
} from "../BribeStakeHelper";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "bribeToken_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "bribeToken",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161072e38038061072e83398101604081905261002f91610044565b60601b6001600160601b031916608052610072565b600060208284031215610055578081fd5b81516001600160a01b038116811461006b578182fd5b9392505050565b60805160601c610699610095600039600081816040015260b001526106996000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806358c93f781461003b578063b61d27f61461007e575b600080fd5b6100627f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200160405180910390f35b61009161008c366004610510565b610093565b005b60006100a1828401846104f4565b90506100d76001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168286610158565b60405163010c6bf960e41b81526001600160a01b0386811660048301526fffffffffffffffffffffffffffffffff86166024830152600060448301528216906310c6bf9090606401600060405180830381600087803b15801561013957600080fd5b505af115801561014d573d6000803e3d6000fd5b505050505050505050565b8015806101e15750604051636eb1769f60e11b81523060048201526001600160a01b03838116602483015284169063dd62ed3e9060440160206040518083038186803b1580156101a757600080fd5b505afa1580156101bb573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101df91906105b4565b155b6102515760405162461bcd60e51b815260206004820152603660248201527f5361666545524332303a20617070726f76652066726f6d206e6f6e2d7a65726f60448201527520746f206e6f6e2d7a65726f20616c6c6f77616e636560501b60648201526084015b60405180910390fd5b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663095ea7b360e01b1790526102a39084906102a8565b505050565b60006102fd826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b031661037a9092919063ffffffff16565b8051909150156102a3578080602001905181019061031b9190610594565b6102a35760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610248565b60606103898484600085610393565b90505b9392505050565b6060824710156103f45760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610248565b843b6104425760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610248565b600080866001600160a01b0316858760405161045e91906105cc565b60006040518083038185875af1925050503d806000811461049b576040519150601f19603f3d011682016040523d82523d6000602084013e6104a0565b606091505b50915091506104b08282866104bb565b979650505050505050565b606083156104ca57508161038c565b8251156104da5782518084602001fd5b8160405162461bcd60e51b815260040161024891906105e8565b600060208284031215610505578081fd5b813561038c8161064b565b60008060008060608587031215610525578283fd5b84356105308161064b565b935060208501359250604085013567ffffffffffffffff80821115610553578384fd5b818701915087601f830112610566578384fd5b813581811115610574578485fd5b886020828501011115610585578485fd5b95989497505060200194505050565b6000602082840312156105a5578081fd5b8151801515811461038c578182fd5b6000602082840312156105c5578081fd5b5051919050565b600082516105de81846020870161061b565b9190910192915050565b602081526000825180602084015261060781604085016020870161061b565b601f01601f19169190910160400192915050565b60005b8381101561063657818101518382015260200161061e565b83811115610645576000848401525b50505050565b6001600160a01b038116811461066057600080fd5b5056fea2646970667358221220be11f05821344ca1d8817fbcbed03cdff8956fbc69b05ff2d2b70dd4b0780e4d64736f6c63430008040033";

type BribeStakeHelperConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BribeStakeHelperConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BribeStakeHelper__factory extends ContractFactory {
  constructor(...args: BribeStakeHelperConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    bribeToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<BribeStakeHelper> {
    return super.deploy(
      bribeToken_,
      overrides || {}
    ) as Promise<BribeStakeHelper>;
  }
  getDeployTransaction(
    bribeToken_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(bribeToken_, overrides || {});
  }
  attach(address: string): BribeStakeHelper {
    return super.attach(address) as BribeStakeHelper;
  }
  connect(signer: Signer): BribeStakeHelper__factory {
    return super.connect(signer) as BribeStakeHelper__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BribeStakeHelperInterface {
    return new utils.Interface(_abi) as BribeStakeHelperInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): BribeStakeHelper {
    return new Contract(address, _abi, signerOrProvider) as BribeStakeHelper;
  }
}
