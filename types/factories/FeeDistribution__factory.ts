/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  FeeDistribution,
  FeeDistributionInterface,
} from "../FeeDistribution";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract IERC20",
        name: "feeAsset_",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "receivedFees",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "totalFeesReceived",
        type: "uint256",
      },
    ],
    name: "ClaimFees",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "feeShare",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "FeesTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "RescueFunds",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "receiver",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "currentAllocPoint",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newAllocPoint",
        type: "uint256",
      },
    ],
    name: "SetFeeReceiver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "contract IFeeDistributor[]",
        name: "pools",
        type: "address[]",
      },
    ],
    name: "claimFees",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "distributeFeeTo",
    outputs: [
      {
        internalType: "uint256",
        name: "pendingReward",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "feeAsset",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "feeReceiverData",
    outputs: [
      {
        internalType: "uint128",
        name: "pendingReward",
        type: "uint128",
      },
      {
        internalType: "uint128",
        name: "allocPoint",
        type: "uint128",
      },
      {
        internalType: "uint256",
        name: "lastPricePerShare",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pricePerShare",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
    ],
    name: "rescueFunds",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "receivers",
        type: "address[]",
      },
      {
        internalType: "uint128[]",
        name: "allocPoints",
        type: "uint128[]",
      },
    ],
    name: "setFeeReceivers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "totalAllocPoints",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalFeesReceived",
    outputs: [
      {
        internalType: "uint128",
        name: "",
        type: "uint128",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516117bd3803806117bd83398101604081905261002f916100f8565b610038336100a8565b6000805460ff60a01b191690556001600160a01b0381166100935760405162461bcd60e51b81526020600482015260116024820152701253959053125117d1915157d054d4d155607a1b604482015260640160405180910390fd5b60601b6001600160601b031916608052610126565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b600060208284031215610109578081fd5b81516001600160a01b038116811461011f578182fd5b9392505050565b60805160601c6116566101676000396000818161016d0152818161058001528181610668015281816107f001528181610a410152610ad801526116566000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c8063725acc6b116100975780639fbaf3de116100665780639fbaf3de14610201578063ce54749f1461021b578063e53b20171461027d578063f2fde38b1461029057600080fd5b8063725acc6b146101cc5780638456cb59146101df5780638da5cb5b146101e757806399530b06146101f857600080fd5b80634f25cdd0116100d35780634f25cdd01461014757806353ba352c146101685780635c975abb146101a7578063715018a6146101c457600080fd5b80631fa36cbe146100fa5780631fec13241461012a5780633f4ba83a1461013f575b600080fd5b60025461010d906001600160801b031681565b6040516001600160801b0390911681526020015b60405180910390f35b61013d610138366004611333565b6102a3565b005b61013d610439565b61015a610155366004611317565b61046d565b604051908152602001610121565b61018f7f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b039091168152602001610121565b600054600160a01b900460ff166040519015158152602001610121565b61013d6105f0565b61013d6101da36600461139c565b610624565b61013d6109cd565b6000546001600160a01b031661018f565b61015a60035481565b60025461010d90600160801b90046001600160801b031681565b610257610229366004611317565b600160208190526000918252604090912080549101546001600160801b0380831692600160801b9004169083565b604080516001600160801b03948516815293909216602084015290820152606001610121565b61013d61028b366004611317565b6109ff565b61013d61029e366004611317565b610b3d565b6000546001600160a01b031633146102d65760405162461bcd60e51b81526004016102cd906114b4565b60405180910390fd5b8281146103145760405162461bcd60e51b815260206004820152600c60248201526b494e56414c49445f53495a4560a01b60448201526064016102cd565b8260005b8181101561043157600086868381811061034257634e487b7160e01b600052603260045260246000fd5b90506020020160208101906103579190611317565b9050600085858481811061037b57634e487b7160e01b600052603260045260246000fd5b905060200201602081019061039091906113fc565b6001600160a01b038316600090815260016020526040902054909150600160801b90046001600160801b03166103c583610bd8565b6103cf8383610c72565b604080518281526001600160801b03841660208201526001600160a01b038516917fa8b8570404e8df49352df5b74bdc90fd5324556e1ff3f948295101be58b783ff910160405180910390a25050508080610429906115da565b915050610318565b505050505050565b6000546001600160a01b031633146104635760405162461bcd60e51b81526004016102cd906114b4565b61046b610de8565b565b60008054600160a01b900460ff16156104985760405162461bcd60e51b81526004016102cd9061148a565b33600081815260016020526040902054600160801b90046001600160801b03166104f75760405162461bcd60e51b815260206004820152601060248201526f24a72b20a624a22fa922a1a2a4ab22a960811b60448201526064016102cd565b600254600160801b90046001600160801b03166105175750600092915050565b61052081610bd8565b6001600160a01b0381166000908152600160205260409020546001600160801b0316915081156105a7576001600160a01b03808216600090815260016020526040902080546fffffffffffffffffffffffffffffffff191690556105a7907f0000000000000000000000000000000000000000000000000000000000000000168484610e85565b604080518381524260208201526001600160a01b038316917fe9bbb2ea7be1fc3aede60ef8c3a5f51c3c98c5c8e4fe2468d4adb219e53c706a910160405180910390a250919050565b6000546001600160a01b0316331461061a5760405162461bcd60e51b81526004016102cd906114b4565b61046b6000610edc565b600054600160a01b900460ff161561064e5760405162461bcd60e51b81526004016102cd9061148a565b6040516370a0823160e01b815230600482015281906000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b1580156106b257600080fd5b505afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190611423565b90506000805b838110156107ce576107a786868381811061071b57634e487b7160e01b600052603260045260246000fd5b90506020020160208101906107309190611317565b6001600160a01b031663476343ee6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561076a57600080fd5b505af115801561077e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107a29190611423565b610f2c565b6107ba906001600160801b031683611514565b9150806107c6816115da565b9150506106f0565b506040516370a0823160e01b8152306004820152819083906001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906370a082319060240160206040518083038186803b15801561083257600080fd5b505afa158015610846573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061086a9190611423565b6108749190611593565b10156108b25760405162461bcd60e51b815260206004820152600d60248201526c494e56414c49445f434c41494d60981b60448201526064016102cd565b6108bb81610f2c565b600280546010906108dd908490600160801b90046001600160801b03166114e9565b82546101009290920a6001600160801b0381810219909316918316021790915560025416151590506109405760405162461bcd60e51b815260206004820152600c60248201526b4e4f5f52454345495645525360a01b60448201526064016102cd565b6002546001600160801b031661095b64e8d4a510008361154c565b610965919061152c565b600360008282546109769190611514565b909155505060025460408051838152600160801b9092046001600160801b031660208301527fcbf6196d7bebcbaaf53f321eecb5b4f39479879f3996f828f10012708a9442d7910160405180910390a15050505050565b6000546001600160a01b031633146109f75760405162461bcd60e51b81526004016102cd906114b4565b61046b610f99565b6000546001600160a01b03163314610a295760405162461bcd60e51b81526004016102cd906114b4565b6040516370a0823160e01b81523060048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906370a082319060240160206040518083038186803b158015610a8b57600080fd5b505afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac39190611423565b90508015610b3957610aff6001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000168383610e85565b60408051308152602081018390527f891d905c747e7308f7e952ff603f2ac799bc5abc150b5792024a59b5c96273d2910160405180910390a15b5050565b6000546001600160a01b03163314610b675760405162461bcd60e51b81526004016102cd906114b4565b6001600160a01b038116610bcc5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016102cd565b610bd581610edc565b50565b600080610be483610ffe565b90925090506001600160801b03821615610c4e576001600160a01b03831660009081526001602052604081208054849290610c299084906001600160801b03166114e9565b92506101000a8154816001600160801b0302191690836001600160801b031602179055505b6001600160a01b039092166000908152600160208190526040909120019190915550565b6001600160a01b03821660009081526001602052604090208054600160801b90046001600160801b03168015610d415760028054829190600090610cc09084906001600160801b031661156b565b92506101000a8154816001600160801b0302191690836001600160801b0316021790555082600260008282829054906101000a90046001600160801b0316610d0891906114e9565b82546001600160801b039182166101009390930a9283029282021916919091179091558354858216600160801b02911617835550610d94565b60028054849190600090610d5f9084906001600160801b03166114e9565b82546001600160801b039182166101009390930a9283029282021916919091179091558354858216600160801b029116178355505b604080516001600160801b038084168252851660208201526001600160a01b038616917fa8b8570404e8df49352df5b74bdc90fd5324556e1ff3f948295101be58b783ff910160405180910390a250505050565b600054600160a01b900460ff16610e385760405162461bcd60e51b815260206004820152601460248201527314185d5cd8589b194e881b9bdd081c185d5cd95960621b60448201526064016102cd565b6000805460ff60a01b191690557f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa335b6040516001600160a01b03909116815260200160405180910390a1565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b179052610ed7908490611081565b505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006001600160801b03821115610f955760405162461bcd60e51b815260206004820152602760248201527f53616665436173743a2076616c756520646f65736e27742066697420696e20316044820152663238206269747360c81b60648201526084016102cd565b5090565b600054600160a01b900460ff1615610fc35760405162461bcd60e51b81526004016102cd9061148a565b6000805460ff60a01b1916600160a01b1790557f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258610e683390565b6003546001600160a01b038216600090815260016020526040812054909190600160801b90046001600160801b0316801561107b576001600160a01b0384166000908152600160208190526040909120015461107764e8d4a510006110638386611593565b61106d908561154c565b6107a2919061152c565b9350505b50915091565b60006110d6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166111539092919063ffffffff16565b805190915015610ed757808060200190518101906110f491906113dc565b610ed75760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b60648201526084016102cd565b6060611162848460008561116c565b90505b9392505050565b6060824710156111cd5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b60648201526084016102cd565b843b61121b5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016102cd565b600080866001600160a01b03168587604051611237919061143b565b60006040518083038185875af1925050503d8060008114611274576040519150601f19603f3d011682016040523d82523d6000602084013e611279565b606091505b5091509150611289828286611294565b979650505050505050565b606083156112a3575081611165565b8251156112b35782518084602001fd5b8160405162461bcd60e51b81526004016102cd9190611457565b60008083601f8401126112de578182fd5b50813567ffffffffffffffff8111156112f5578182fd5b6020830191508360208260051b850101111561131057600080fd5b9250929050565b600060208284031215611328578081fd5b81356111658161160b565b60008060008060408587031215611348578283fd5b843567ffffffffffffffff8082111561135f578485fd5b61136b888389016112cd565b90965094506020870135915080821115611383578384fd5b50611390878288016112cd565b95989497509550505050565b600080602083850312156113ae578182fd5b823567ffffffffffffffff8111156113c4578283fd5b6113d0858286016112cd565b90969095509350505050565b6000602082840312156113ed578081fd5b81518015158114611165578182fd5b60006020828403121561140d578081fd5b81356001600160801b0381168114611165578182fd5b600060208284031215611434578081fd5b5051919050565b6000825161144d8184602087016115aa565b9190910192915050565b60208152600082518060208401526114768160408501602087016115aa565b601f01601f19169190910160400192915050565b60208082526010908201526f14185d5cd8589b194e881c185d5cd95960821b604082015260600190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60006001600160801b0380831681851680830382111561150b5761150b6115f5565b01949350505050565b60008219821115611527576115276115f5565b500190565b60008261154757634e487b7160e01b81526012600452602481fd5b500490565b6000816000190483118215151615611566576115666115f5565b500290565b60006001600160801b038381169083168181101561158b5761158b6115f5565b039392505050565b6000828210156115a5576115a56115f5565b500390565b60005b838110156115c55781810151838201526020016115ad565b838111156115d4576000848401525b50505050565b60006000198214156115ee576115ee6115f5565b5060010190565b634e487b7160e01b600052601160045260246000fd5b6001600160a01b0381168114610bd557600080fdfea264697066735822122082a9ba183c275b3626c4add0069ef819122cb2ca4e28b2f4bf6236939a3d84a364736f6c63430008040033";

type FeeDistributionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: FeeDistributionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class FeeDistribution__factory extends ContractFactory {
  constructor(...args: FeeDistributionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    feeAsset_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<FeeDistribution> {
    return super.deploy(feeAsset_, overrides || {}) as Promise<FeeDistribution>;
  }
  getDeployTransaction(
    feeAsset_: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(feeAsset_, overrides || {});
  }
  attach(address: string): FeeDistribution {
    return super.attach(address) as FeeDistribution;
  }
  connect(signer: Signer): FeeDistribution__factory {
    return super.connect(signer) as FeeDistribution__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FeeDistributionInterface {
    return new utils.Interface(_abi) as FeeDistributionInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): FeeDistribution {
    return new Contract(address, _abi, signerOrProvider) as FeeDistribution;
  }
}
