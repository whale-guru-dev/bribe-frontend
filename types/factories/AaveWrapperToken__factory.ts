/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  AaveWrapperToken,
  AaveWrapperTokenInterface,
} from "../AaveWrapperToken";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "oldValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "newValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "UpdateSnapshot",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAccountSnapshot",
    outputs: [
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "getAccountSnapshotCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
    ],
    name: "getDepositAt",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "underlying_",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        internalType: "address",
        name: "recipient",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "underlying",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50611654806100206000396000f3fe608060405234801561001057600080fd5b50600436106101375760003560e01c8063715018a6116100b8578063a9059cbb1161007c578063a9059cbb1461029d578063c37f68e2146102b0578063c4d66de8146102d1578063dcb807df146102e4578063dd62ed3e146102f7578063f2fde38b1461033057600080fd5b8063715018a6146102565780638da5cb5b1461025e57806395d89b411461026f5780639dc29fac14610277578063a457c2d71461028a57600080fd5b8063313ce567116100ff578063313ce567146101cb57806339509351146101da57806340c10f19146101ed5780636f307dc31461020257806370a082311461022d57600080fd5b806302e3dfc41461013c57806306fdde0314610178578063095ea7b31461018d57806318160ddd146101b057806323b872dd146101b8575b600080fd5b61016561014a366004611279565b6001600160a01b031660009081526098602052604090205490565b6040519081526020015b60405180910390f35b610180610343565b60405161016f9190611489565b6101a061019b366004611300565b6103d5565b604051901515815260200161016f565b603554610165565b6101a06101c63660046112c5565b6103ec565b6040516012815260200161016f565b6101a06101e8366004611300565b61049d565b6102006101fb366004611300565b6104d9565b005b609754610215906001600160a01b031681565b6040516001600160a01b03909116815260200161016f565b61016561023b366004611279565b6001600160a01b031660009081526033602052604090205490565b610200610511565b6065546001600160a01b0316610215565b610180610547565b610200610285366004611300565b610556565b6101a0610298366004611300565b61058a565b6101a06102ab366004611300565b610623565b6102c36102be366004611279565b610630565b60405161016f929190611464565b6102006102df366004611279565b6106fa565b6101656102f2366004611300565b610906565b610165610305366004611293565b6001600160a01b03918216600090815260346020908152604080832093909416825291909152205490565b61020061033e366004611279565b610a03565b606060368054610352906115b7565b80601f016020809104026020016040519081016040528092919081815260200182805461037e906115b7565b80156103cb5780601f106103a0576101008083540402835291602001916103cb565b820191906000526020600020905b8154815290600101906020018083116103ae57829003601f168201915b5050505050905090565b60006103e2338484610a9e565b5060015b92915050565b60006103f9848484610adc565b6001600160a01b0384166000908152603460209081526040808320338452909152902054828110156104835760405162461bcd60e51b815260206004820152602860248201527f45524332303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6104908533858403610a9e565b60019150505b9392505050565b3360008181526034602090815260408083206001600160a01b038716845290915281205490916103e29185906104d490869061153c565b610a9e565b6065546001600160a01b031633146105035760405162461bcd60e51b815260040161047a906114bc565b61050d8282610b1b565b5050565b6065546001600160a01b0316331461053b5760405162461bcd60e51b815260040161047a906114bc565b6105456000610c06565b565b606060378054610352906115b7565b6065546001600160a01b031633146105805760405162461bcd60e51b815260040161047a906114bc565b61050d8282610c58565b3360009081526034602090815260408083206001600160a01b03861684529091528120548281101561060c5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b606482015260840161047a565b6106193385858403610a9e565b5060019392505050565b60006103e2338484610adc565b6001600160a01b038116600090815260986020908152604091829020805483518184028101840190945280845260609384936001840192849183018282801561069857602002820191906000526020600020905b815481526020019060010190808311610684575b50505050509150808054806020026020016040519081016040528092919081815260200182805480156106ea57602002820191906000526020600020905b8154815260200190600101908083116106d6575b5050505050905091509150915091565b600054610100900460ff166107155760005460ff1615610719565b303b155b61077c5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161047a565b600054610100900460ff1615801561079e576000805461ffff19166101011790555b609780546001600160a01b0319166001600160a01b0384161790556107c1610db3565b6108f1826001600160a01b03166306fdde036040518163ffffffff1660e01b815260040160006040518083038186803b1580156107fd57600080fd5b505afa158015610811573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108399190810190611329565b604051602001610849919061140c565b604051602081830303815290604052836001600160a01b03166395d89b416040518163ffffffff1660e01b815260040160006040518083038186803b15801561089157600080fd5b505afa1580156108a5573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526108cd9190810190611329565b6040516020016108dd919061143a565b604051602081830303815290604052610dea565b801561050d576000805461ff00191690555050565b6001600160a01b0382166000908152609860205260408120805480610930576000925050506103e6565b838260000160008154811061095557634e487b7160e01b600052603260045260246000fd5b90600052602060002001541115610971576000925050506103e6565b838261097e600184611574565b8154811061099c57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154116109ef57816001016001826109bd9190611574565b815481106109db57634e487b7160e01b600052603260045260246000fd5b9060005260206000200154925050506103e6565b6109fa828286610e23565b95945050505050565b6065546001600160a01b03163314610a2d5760405162461bcd60e51b815260040161047a906114bc565b6001600160a01b038116610a925760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161047a565b610a9b81610c06565b50565b60405162461bcd60e51b81526020600482015260136024820152721054141493d59157d393d517d0531313d5d151606a1b604482015260640161047a565b60405162461bcd60e51b81526020600482015260146024820152731514905394d1915497d393d517d0531313d5d15160621b604482015260640161047a565b6001600160a01b038216610b715760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161047a565b610b7d60008383610f58565b8060356000828254610b8f919061153c565b90915550506001600160a01b03821660009081526033602052604081208054839290610bbc90849061153c565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b606580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038216610cb85760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b606482015260840161047a565b610cc482600083610f58565b6001600160a01b03821660009081526033602052604090205481811015610d385760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b606482015260840161047a565b6001600160a01b0383166000908152603360205260408120838303905560358054849290610d67908490611574565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35b505050565b600054610100900460ff16610dda5760405162461bcd60e51b815260040161047a906114f1565b610de2610ff2565b610545611019565b600054610100900460ff16610e115760405162461bcd60e51b815260040161047a906114f1565b610e19610ff2565b61050d8282611049565b60008080610e32600186611574565b90505b81811115610f1f5760006002610e4b8484611574565b610e559190611554565b610e5f9083611574565b905084876000018281548110610e8557634e487b7160e01b600052603260045260246000fd5b90600052602060002001541415610ece57866001018181548110610eb957634e487b7160e01b600052603260045260246000fd5b90600052602060002001549350505050610496565b84876000018281548110610ef257634e487b7160e01b600052603260045260246000fd5b90600052602060002001541015610f0b57809250610f19565b610f16600182611574565b91505b50610e35565b856001018281548110610f4257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154925050509392505050565b816001600160a01b0316836001600160a01b03161415610f7757505050565b6001600160a01b03831615610fb5576001600160a01b038316600090815260336020526040902054610fb38482610fae8582611574565b611097565b505b6001600160a01b03821615610dae576001600160a01b038216600090815260336020526040902054610fec8382610fae858261153c565b50505050565b600054610100900460ff166105455760405162461bcd60e51b815260040161047a906114f1565b600054610100900460ff166110405760405162461bcd60e51b815260040161047a906114f1565b61054533610c06565b600054610100900460ff166110705760405162461bcd60e51b815260040161047a906114f1565b81516110839060369060208501906111c4565b508051610dae9060379060208401906111c4565b6001600160a01b03831660009081526098602052604090206110b99082611109565b6040805183815260208101839052428183015290516001600160a01b038516917f2db95288e33820df67c8ba881d831954e35d039785fac4e8b0a887029c05e73b919081900360600190a2505050565b81544390801580159061114f57508184611124600184611574565b8154811061114257634e487b7160e01b600052603260045260246000fd5b9060005260206000200154145b156111955782846001016001836111669190611574565b8154811061118457634e487b7160e01b600052603260045260246000fd5b600091825260209091200155610fec565b508254600180820185556000858152602080822090930193909355938401805494850181558252902090910155565b8280546111d0906115b7565b90600052602060002090601f0160209004810192826111f25760008555611238565b82601f1061120b57805160ff1916838001178555611238565b82800160010185558215611238579182015b8281111561123857825182559160200191906001019061121d565b50611244929150611248565b5090565b5b808211156112445760008155600101611249565b80356001600160a01b038116811461127457600080fd5b919050565b60006020828403121561128a578081fd5b6104968261125d565b600080604083850312156112a5578081fd5b6112ae8361125d565b91506112bc6020840161125d565b90509250929050565b6000806000606084860312156112d9578081fd5b6112e28461125d565b92506112f06020850161125d565b9150604084013590509250925092565b60008060408385031215611312578182fd5b61131b8361125d565b946020939093013593505050565b60006020828403121561133a578081fd5b815167ffffffffffffffff80821115611351578283fd5b818401915084601f830112611364578283fd5b81518181111561137657611376611608565b604051601f8201601f19908116603f0116810190838211818310171561139e5761139e611608565b816040528281528760208487010111156113b6578586fd5b6113c783602083016020880161158b565b979650505050505050565b6000815180845260208085019450808401835b83811015611401578151875295820195908201906001016113e5565b509495945050505050565b6562726962652d60d01b81526000825161142d81600685016020870161158b565b9190910160060192915050565b61313960f11b81526000825161145781600285016020870161158b565b9190910160020192915050565b60408152600061147760408301856113d2565b82810360208401526109fa81856113d2565b60208152600082518060208401526114a881604085016020870161158b565b601f01601f19169190910160400192915050565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6000821982111561154f5761154f6115f2565b500190565b60008261156f57634e487b7160e01b81526012600452602481fd5b500490565b600082821015611586576115866115f2565b500390565b60005b838110156115a657818101518382015260200161158e565b83811115610fec5750506000910152565b600181811c908216806115cb57607f821691505b602082108114156115ec57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220204d862da66ca0a0d22116243be8c361cad2453a0ab6dc2ef128cfb22fe8163c64736f6c63430008040033";

type AaveWrapperTokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AaveWrapperTokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AaveWrapperToken__factory extends ContractFactory {
  constructor(...args: AaveWrapperTokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<AaveWrapperToken> {
    return super.deploy(overrides || {}) as Promise<AaveWrapperToken>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): AaveWrapperToken {
    return super.attach(address) as AaveWrapperToken;
  }
  connect(signer: Signer): AaveWrapperToken__factory {
    return super.connect(signer) as AaveWrapperToken__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AaveWrapperTokenInterface {
    return new utils.Interface(_abi) as AaveWrapperTokenInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): AaveWrapperToken {
    return new Contract(address, _abi, signerOrProvider) as AaveWrapperToken;
  }
}
